# This workflow runs when a new circuit is added to the repository or when a change occurs to an external tool like ECNE

name: Run Benchmarks

# TODO Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
# Install Julia
  runEcne:
    runs-on: ubuntu-latest
    outputs: 
      ecneResults: ${{ steps.setEcneResults.outputs.results }}
    steps:
      - uses: actions/checkout@v3
        name: checkoutFormalBenchmarksForEcne
      - uses: actions/checkout@v1.0.0
      - uses: julia-actions/setup-julia@v1
        with:
          version: 1.7
      - uses: julia-actions/cache@v1
        id: juliaCache
      - uses: extractions/setup-just@v1
      - uses: actions/checkout@v3
        with: 
          #repository: franklynwang/EcneProject
          repository: chyanju/Ecne
          path: EcneProject
      - if: steps.juliaCache.outputs.cache-hit != 'true'
        run: just install
        working-directory: EcneProject 
      # - run: echo "::set-output name=results::$(julia --project=. src/Ecne.jl --r1cs target/division.r1cs --name division --sym target/division.sym | grep 'R1CS function')"
      #   working-directory: EcneProject
      #   id: setEcneResults
      - run: echo "::set-output name=results::$(python batchRunECNE.py)"
        id: setEcneResults
      
  ## Install Picus
  runPicus:
    runs-on: ubuntu-latest
    outputs:
      picusResults: ${{ steps.setPicusResults.outputs.results }}
    steps:
      - uses: actions/checkout@v3
        name: checkoutFormalBenchmarksForPicus
      - name: Cache Racket dependencies
        uses: actions/cache@v3
        id: racketCache
        with:
          path: |
            ~/.cache/racket
            ~/.local/share/racket
          key: ${{ runner.os }}-racket-current-8.6  
      - name: Install Racket
        uses: Bogdanp/setup-racket@v1.8.1
        with:
          architecture: 'x64'
          distribution: 'full'
          variant: 'CS'
          version: '8.6' # Note: We could use current version here like in here: https://github.com/Bogdanp/setup-racket-cache-example/blob/master/.github/workflows/push.yml but then we need to tweak the caching
      - uses: actions/checkout@v3
        with:
          repository: chyanju/Picus
          path: Picus
      - if: steps.racketCache.outputs.cache-hit != 'true'    
        run: raco pkg install --auto --skip-installed rosette csv-reading
      - if: steps.racketCache.outputs.cache-hit != 'true'    
        run: brew install z3
      - name: ls and pwd
        run:  ls -al
      - run: pwd
      - name: ls and al in picus
        run: pwd
        working-directory: Picus
      - run: ls -al
        working-directory: Picus
      # - run: echo "::set-output name=results::$(racket ./test-v3-uniqueness.rkt --r1cs ../generated/O0/XOR@gates@circomlib.r1cs | grep "Weak safety verified")"
      #   working-directory: Picus
      #   id: setPicusResults
      - run: echo "::set-output name=results::$(python batchRunPicus.py)"
        id: setPicusResults
    # - run: racket ./test-uniqueness.rkt --r1cs ../generated/O0/XOR@gates@circomlib.r1cs
    #   working-directory: Picus
      
      # - name: Running Batch Commands
      #   run: ls -al
      # - run: pwd
    # - run: python batchRunECNE.py >> $GITHUB_STEP_SUMMARY

    #- run: python batchRunECNE.py | grep 'R1CS function' >> $GITHUB_STEP_SUMMARY
    #- run: python batchRunPicus.py | grep 'safey' >> $GITHUB_STEP_SUMMARY
    # - run: python batchRunPicus.py >> $GITHUB_STEP_SUMMARY
    #- run: python batchRunPicus.py
    #  working-directory: Picus

  populateReport:
    runs-on: ubuntu-latest
    needs: [runEcne, runPicus]
    steps:
      - uses: actions/checkout@v3
        name: checkoutFormalBenchmarksForJobSummary
      - name: Adding Markdown
        run: python produceJobSummary.py ${{needs.runEcne.outputs.ecneResults}} ${{needs.runPicus.outputs.picusResults}} >> $GITHUB_STEP_SUMMARY
    
      
      
