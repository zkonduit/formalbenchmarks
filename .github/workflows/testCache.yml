# This is a basic workflow to help you get started with Actions

name: test Caching

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  runPicus:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: checkoutFormalBenchmarksForPicus
      - name: ls -al after checking out FormalBenchmarks
        run: ls -al   
      - name: pwd
        run: pwd
      - name: Cache Test
        uses: actions/cache@v3
        id: testCache
        with:
          path: |
            CVC4
          key: ${{ runner.os }}-CVC4
          
      - if: steps.testCache.outputs.cache-hit != 'true'    
        run: echo "not in cache"
      - uses: actions/checkout@v3
        with:
          repository: alex-ozdemir/CVC4
          ref: ddcecc5ee3281831953ea04ba127c80d08122dad
          path: 'CVC4'
      - name: ls -al after checking out CVC4
        run: ls -al   
      - name: pwd
        run: pwd
      - name: Download cocoa
        run: wget "https://cocoa.dima.unige.it/cocoa/cocoalib/tgz/CoCoALib-0.99800.tgz"
        working-directory: CVC4
      - name: ls -al
        run: ls -al
        working-directory: CVC4        
      - name: unzip cocoa
        run: tar -xzf CoCoALib-0.99800.tgz
        working-directory: CVC4
      - name: ls -al
        run: ls -al
      - name: ls -al
        run: ls -al
        working-directory: CVC4/CoCoALib-0.99800

