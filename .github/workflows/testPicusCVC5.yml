# This is a basic workflow to help you get started with Actions

name: test Picus CVC5

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  runPicus:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: checkoutFormalBenchmarksForPicus
      - name: Cache Racket dependencies
        uses: actions/cache@v3
        id: racketCache
        with:
          path: |
            ~/.cache/racket
            ~/.local/share/racket
          key: ${{ runner.os }}-racket-current-8.6  
      - name: Install Racket
        uses: Bogdanp/setup-racket@v1.8.1
        with:
          architecture: 'x64'
          distribution: 'full'
          variant: 'CS'
          version: '8.6' # Note: We could use current version here like in here: https://github.com/Bogdanp/setup-racket-cache-example/blob/master/.github/workflows/push.yml but then we need to tweak the caching
      - uses: actions/checkout@v3
        with:
          repository: alex-ozdemir/CVC4
          ref: ddcecc5ee3281831953ea04ba127c80d08122dad
      - name: Download cocoa
        run: wget "https://cocoa.dima.unige.it/cocoa/cocoalib/tgz/CoCoALib-0.99800.tgz"
      - name: ls -al
        run: ls -al
      - name: unzip cocoa
        run: tar -xzf CoCoALib-0.99800.tgz
      - name: ls -al
        run: ls -al
      - name: ls -al
        run: ls -al
        working-directory: CoCoALib-0.99800
        
      - run: ./configure
        working-directory: CoCoALib-0.99800
        name: configure cocoa
      - run: make
        working-directory: CoCoALib-0.99800
        name: make cocoa
      - name: pwd
        run: pwd
      - name: ls -al
        run: ls -al
      - run: ./configure.sh --cocoa --auto-download
        name: configure CVC4 build
      - run: make
        name: make CVC4 build
      - name: ls -al
        run: ls -al
      - run: patch CVC4/cmake/deps-utils/CoCoALib-0.99800-trace.patch CoCoALib/
        working-directory: CVC4
      - run: ./configure
        working-directory: CoCoALib-0.99800
        name: configure cocoa after patch
      - run: make
        working-directory: CoCoALib-0.99800
        name: make cocoa after patch     
        

      - uses: actions/checkout@v3
        with:
          repository: chyanju/Picus
          path: Picus
      - if: steps.racketCache.outputs.cache-hit != 'true'    
        run: raco pkg install --auto --skip-installed rosette csv-reading
      - if: steps.racketCache.outputs.cache-hit != 'true'    
        run: brew install z3
      - name: ls and pwd
        run:  ls -al
      - run: pwd
      - name: ls and al in picus
        run: pwd
        working-directory: Picus
      - run: ls -al
        working-directory: Picus
      - run: racket ./test-v3-uniqueness.rkt --r1cs ../generated/O0/XOR@gates@circomlib.r1cs --solver cvc5
        working-directory: Picus

