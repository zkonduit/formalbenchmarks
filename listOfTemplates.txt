EdDSAPoseidonVerifier()
MultiMux1(n)
Mux1()
MultiMux3(n)
Mux3()
WindowMulFix()
SegmentMulFix(nWindows)
EscalarMulFix(n, BASE)
AliasCheck()
BinSum(n, ops)
Multiplexor2()
BitElementMulAny()
SegmentMulAny(n)
EscalarMulAny(n)
Sigma()
Ark(t, C, r)
Mix(t, M)
Poseidon(nInputs)
Pedersen(n)
IsZero()
IsEqual()
ForceEqualIfEnabled()
LessThan(n)
LessThan(n)
LessEqThan(n)
GreaterThan(n)
GreaterEqThan(n)
Sign()
Window4()
Segment(nWindows)
Pedersen(n)
MiMC7(nrounds)
MultiMiMC7(nInputs, nRounds)
Edwards2Montgomery()
Montgomery2Edwards()
MontgomeryAdd()
MontgomeryDouble()
EscalarMulWindow(base, k)
EscalarMul(n, base)
BinSub(n)
MiMCSponge(nInputs, nRounds, nOutputs)
MiMCFeistel(nrounds)
EdDSAMiMCVerifier()
CompConstant(ct)
EscalarProduct(w)
Decoder(w)
Multiplexer(wIn, nIn)
Bits2Point()
Bits2Point_Strict()
Point2Bits()
Point2Bits_Strict()
EdDSAMiMCSpongeVerifier()
XOR()
AND()
OR()
NOT()
NAND()
NOR()
MultiAND(n)
MultiMux2(n)
Mux2()
Sigma()
Ark(t, C, r)
Mix(t, M)
MixLast(t, M, s)
MixS(t, S, r)
PoseidonEx(nInputs, nOuts)
Poseidon(nInputs)
BabyAdd()
BabyDbl()
BabyCheck()
BabyPbk()
Switcher()
Num2Bits(n)
Num2Bits_strict()
Bits2Num(n)
Bits2Num_strict()
Num2BitsNeg(n)
MultiMux4(n)
Mux4()
EdDSAVerifier(n)
SMTHash1()
SMTHash2()
SMTHash1()
SMTHash2()
SMTProcessorLevel()
SMTLevIns(nLevels)
SMTVerifier(nLevels)
SMTVerifierSM()
SMTProcessorSM()
SMTVerifierLevel()
SMTProcessor(nLevels)
SmallSigma(ra, rb, rc)
BigSigma(ra, rb, rc)
H(x)
K(x)
RotR(n, r)
Ch_t(n)
T2()
ShR(n, r)
Main()
Xor3(n)
SigmaPlus()
Sha256compression()
Sha256(nBits)
Sha256_2()
Maj_t(n)
T1()
EllipticCurveAddUnequal3Reg(n, q0, q1, q2)
EllipticCurveAddUnequal4Reg(n, q0, q1, q2, q3)
EllipticCurveDouble0(n, k, a, q0, q1, q2, q3)
LineEqualCoefficients(n, k, q)
MillerLoop1(n, k, b, r, q)
Fp12MultiplyWithLineEqual(n, k, kg, overflowg, q)
MillerLoop2(n, k, b, r, q)
CoreVerifyPubkeyG1NoCheck(n, k)
CoreVerifyPubkeyG1(n, k)
OptSimpleSWU2(n, k)
Iso3Map(n, k)
EndomorphismPsi(n, k, p)
EndomorphismPsi2(n, k, p)
ClearCofactorG2(n, k)
MapToG2(n, k)
SubgroupCheckG2(n, k)
SubgroupCheckG1(n, k)
PointOnLineFp2(n, k, p)
PointOnCurveFp2(n, k, a, b, p)
EllipticCurveFunction(n, k, a, b, p)
PointOnTangentFp2(n, k, a, p)
EllipticCurveAddUnequalFp2(n, k, p)
EllipticCurveDoubleFp2(n, k, a, b, p)
EllipticCurveAddFp2(n, k, a2, b2, p)
EllipticCurveScalarMultiplyFp2(n, k, b, x, p)
EllipticCurveScalarMultiplyUnequalFp2(n, k, b, x, p)
Fp12CyclotomicCompress(n, k)
Fp12CyclotomicDecompress(n, k, p)
SignedFp12CyclotomicSquareNoCarry(n, k)
Fp12CyclotomicSquare(n, k, p)
Fp12CyclotomicExp(n, k, e, p)
FinalExpHardPart(n, k, p)
FinalExpEasyPart(n, k, p)
FinalExponentiate(n, k, p)
Fp2Add(n, k, p)
SignedFp2MultiplyNoCarryUnequal(n, ka, kb, m_out)
SignedFp2MultiplyNoCarry(n, k, m_out)
Fp2Compress(n, k, m, p, m_out)
SignedFp2MultiplyNoCarryCompress(n, k, p, m_in, m_out)
SignedFp2MultiplyNoCarryCompressThree(n, k, p, m_in, m_out)
RangeCheck2D(n, k)
SignedFp2CarryModP(n, k, overflow, p)
SignedFp2CompressCarry(n, k, m, overflow, p)
Fp2Multiply(n, k, p)
Fp2MultiplyThree(n, k, p)
Fp2Negate(n, k, p)
Fp2Subtract(n, k, p)
Fp2Invert(n, k, p)
SignedFp2Divide(n, k, overflowa, overflowb, p)
Fp2Conjugate(n, k, p)
Fp2FrobeniusMap(n, k, power, p)
Fp2Sgn0(n, k, p)
Fp2IsZero(n, k, p)
Fp2IsEqual(n, k, p)
ModSum(n)
BigIsEqual(k)
BigIsZero(k)
ModSub(n)
ModSubThree(n)
ModSumThree(n)
ModSumFour(n)
ModProd(n)
Split(n, m)
SplitThree(n, m, k)
BigAdd(n, k)
BigMultShortLong(n, k, m_out)
BigMultShortLongUnequal(n, ka, kb, m_out)
LongToShortNoEndCarry(n, k)
BigMult(n, k)
BigLessThan(n, k)
BigMod(n, k)
BigMod2(n, k, m)
BigAddModP(n, k)
BigSub(n, k)
BigSubModP(n, k)
BigMultModP(n, k)
BigModInv(n, k)
CheckCarryToZero(n, m, k)
PrimeReduce(n, k, m, p, m_out)
BigMultShortLong2D(n, k, l)
BigMultShortLong2DUnequal(n, ka, kb, la, lb)
PointOnLine(n, k, p)
PointOnCurve(n, k, a, b, p)
PointOnTangent(n, k, a, p)
EllipticCurveAddUnequal(n, k, p)
EllipticCurveDouble(n, k, a, b, p)
EllipticCurveAdd(n, k, a1, b1, p)
EllipticCurveScalarMultiply(n, k, b, x, p)
EllipticCurveScalarMultiplyUnequal(n, k, b, x, p)
SignedLineFunctionUnequalNoCarry(n, k, m_out)
SignedLineFunctionEqualNoCarry(n, k, m_out)
LineFunctionUnequal(n, k, q)
LineFunctionEqual(n, k, q)
Fp12MultiplyWithLineUnequal(n, k, kg, overflowg, q)
when x has few significant bits in base 2)
MillerLoop(n, k, b, x, q)
BLSMillerLoop(n, k, q)
TatePairing(n, k, q)
SignedLineFunctionUnequalNoCarryFp2(n, k, m_out)
SignedLineFunctionEqualNoCarryFp2(n, k, m_out)
LineFunctionUnequalFp2(n, k, q)
LineFunctionEqualFp2(n, k, q)
Fp12MultiplyWithLineUnequalFp2(n, k, kg, overflowg, q)
when x has few significant bits in base 2)
MillerLoopFp2(n, k, b, x, q)
when x has few significant bits in base 2)
MillerLoopFp2Two(n, k, b, x, q)
OptimalAtePairing(n, k, q)
FieldAdd2D(n, k, l)
PolynomialReduce(l)
Fp2PolynomialReduce(n, k, p)
Fp2Multiply1(n, k, p)
Fp2Square(n, k)
Fp2multiplyNoCarry(n, k)
Fp2multiply(n, k)
Fp12MultiplyThree(n, k, p)
Fp12FrobeniusMap(n, k, power)
Fp12Add(n, k, p)
SignedFp12ScalarMultiplyNoCarry(n, k, m_out)
SignedFp12ScalarMultiplyNoCarryUnequal(n, ka, kb, m_out)
SignedFp12Fp2MultiplyNoCarry(n, k, m_out)
SignedFp12Fp2MultiplyNoCarryUnequal(n, ka, kb, m_out)
SignedFp12MultiplyNoCarryUnequal(n, ka, kb, m_out)
SignedFp12MultiplyNoCarry(n, k, m_out)
Fp12Compress(n, k, m, p, m_out)
SignedFp12MultiplyNoCarryCompress(n, k, p, m_in, m_out)
SignedFp12CarryModP(n, k, overflow, p)
Fp12Multiply(n, k, p)
Fp12Square(n, k, p)
Fp6Invert(n, k, p)
Fp12Invert(n, k, p)
Fp12Exp(n, k, e, p)
FpAdd(n, k, p)
FpSubtract(n, k, p)
FpNegate(n, k, p)
FpMultiply(n, k, p)
CheckCarryModP(n, k, m, overflow, p)
SignedFpCarryModP(n, k, overflow, p)
SignedCheckCarryModToZero(n, k, overflow, p)
FpSgn0(n, k, p)
FpIsZero(n, k, p)
FpIsEqual(n, k, p)
PointOnLineFp2(n, k, p)
PointOnCurveFp2(n, k, a, b0, b1, p)
EllipticCurveFunction(n, k, a, b0, b1, p)
PointOnTangentFp2(n, k, a, p)
EllipticCurveAddUnequalFp2(n, k, p)
EllipticCurveDoubleFp2(n, k, a, b0, b1, p)
EllipticCurveAddFp2(n, k, a2, b20, b21, p)
EllipticCurveScalarMultiplyFp2(n, k, b0, b1, x, p)
EllipticCurveScalarMultiplyUnequalFp2(n, k, b0, b1, x, p)
EndomorphismPsi(n, k, p)
SubgroupCheckG1(n, k)
SubgroupCheckG2(n, k)
Fp12CyclotomicCompress(n, k)
Fp12CyclotomicDecompress(n, k, p)
SignedFp12CyclotomicSquareNoCarry(n, k)
Fp12CyclotomicSquare(n, k, p)
Fp12CyclotomicExp(n, k, e, p)
BNFinalExpHardPart(n, k, p)
FinalExpEasyPart(n, k, p)
FinalExponentiate(n, k, p)
EllipticCurveScalarMultiplySignalX(n, k, b, p)
SignedLineFunctionUnequalNoCarryFp2(n, k, m_out)
SignedLineFunctionEqualNoCarryFp2(n, k, m_out)
LineFunctionUnequalFp2(n, k, q)
LineFunctionEqualFp2(n, k, p)
Fp12MultiplyWithLineUnequalFp2(n, k, kg, overflowg, q)
Fp12MultiplyWithLineEqualFp2(n, k, p)
MillerLoopFp2(n, k, b0, b1, loopCount, p)
OptimizedMillerLoopFp2(n, k, b0, b1, pseudoBinaryEncoding, loopBitLength, p)
MillerLoopThreeFp2(n, k, b0, b1, loopCount, p)
OptimizedMillerLoopThreeFp2(n, k, b0, b1, pseudoBinaryEncoding, loopBitLength, p)
OptimizedMillerLoopProductFp2(n, k, b0, b1, numPairing, pseudoBinaryEncoding, loopBitLength, p)
OptimalAtePairing(n, k, p)
Fp12Conjugate(n, k, p)
Fp12FrobeniusMap(n, k, power)
Fp12Add(n, k, p)
SignedFp12ScalarMultiplyNoCarry(n, k, m_out)
SignedFp12ScalarMultiplyNoCarryUnequal(n, ka, kb, m_out)
SignedFp12Fp2MultiplyNoCarry(n, k, m_out)
SignedFp12Fp2MultiplyNoCarryUnequal(n, ka, kb, m_out)
SignedFp12MultiplyNoCarryUnequal(n, ka, kb, m_out)
SignedFp12MultiplyNoCarry(n, k, m_out)
Fp12Compress(n, k, m, p, m_out)
SignedFp12MultiplyNoCarryCompress(n, k, p, m_in, m_out)
SignedFp12CarryModP(n, k, overflow, p)
Fp12Multiply(n, k, p)
Fp12MultiplyThree(n, k, p)
Fp12Square(n, k, p)
Fp6Invert(n, k, p)
Fp12Invert(n, k, p)
Fp12Exp(n, k, e, p)
verifyProof(publicInputCount)
CalculateSecret()
CalculateIdentityCommitment()
CalculateNullifierHash()
Semaphore(nLevels)
MerkleTreeInclusionProof(nLevels)
ModSum(n)
ModSub(n)
ModSubThree(n)
ModSumThree(n)
ModSumFour(n)
ModProd(n)
Split(n, m)
SplitThree(n, m, k)
BigAdd(n, k)
BigMultNoCarry(n, ma, mb, ka, kb)
LongToShortNoEndCarry(n, k)
BigMult(n, k)
BigLessThan(n, k)
BigIsEqual(k)
BigMod(n, k)
BigSub(n, k)
BigSubModP(n, k)
BigMultModP(n, k)
BigModInv(n, k)
CheckCarryToZero(n, m, k)
ECDSAPrivToPub(n, k)
ECDSAVerifyNoPubkeyCheck(n, k)
ECDSAExtendedVerify(n, k)
AddUnequalCubicConstraint()
Secp256k1PointOnLine()
Secp256k1PointOnTangent()
Secp256k1PointOnCurve()
Secp256k1AddUnequal(n, k)
Secp256k1Double(n, k)
Secp256k1ScalarMult(n, k)
A2NoCarry()
A3NoCarry()
A2B1NoCarry()
A1B1C1NoCarry()
PrivKeyToAddr(n, k)
Secp256k1PrimeReduce10Registers()
Secp256k1PrimeReduce7Registers()
CheckInRangeSecp256k1 ()
CheckCubicModPIsZero(m)
CheckQuadraticModPIsZero(m)
D(n, shl, shr)
Theta()
stepRhoPi(shl, shr)
RhoPi()
stepChi()
Chi()
RC(r)
Iota(r)
Pad(nBits)
KeccakfRound(r)
Absorb()
Final(nBits)
Squeeze(nBits)
Keccakf()
Keccak(nBitsIn, nBitsOut)
Xor5(n)
XorArray(n)
XorArraySingle(n)
OrArray(n)
AndArray(n)
ShL(n, r)
FlattenPubkey(numBits, k)
PubkeyToAddress()
Main()
Main()
Whitelist()
Main()
RangeProof(bits)
MultiRangeProof(n, bits)
RPTester()
Random()
IsNegative()
Modulo(divisor_bits, SQRT_P)
RandomGradientAt(DENOMINATOR)
GetCornersAndGradVectors(scale_bits, DENOMINATOR, SQRT_P)
GetWeightBL(DENOMINATOR)
GetWeightBR(DENOMINATOR)
GetWeightTL(DENOMINATOR)
GetWeightTR(DENOMINATOR)
Dot(DENOMINATOR)
PerlinValue(DENOMINATOR)
SingleScalePerlin(scale_bits, DENOMINATOR, SQRT_P)
MultiScalePerlin()
QuinSelector(choices)
CalculateTotal(n)
Main()
